using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Web.Configuration;
using System.Data.SqlClient;

public partial class Redactor : System.Web.UI.Page
{
    int editingRow = -1;
    string login = "";
    string expDate = "";
    int selected;
    int pId = 0;
    SqlDataReader dr = null;
    ArrayList reasons = new ArrayList();
    ArrayList hours = new ArrayList();
    bool needTitle = true;

    protected void Page_Load(object sender, EventArgs e)
    {
        if ((Session["SCSLogin"] != null) & (Session["SCSDate"] != null))
        {
            Session["OldShow"] = null;
            if (needTitle == true)
            {
                if ((DateTime)Session["SCSDate"] <= DateTime.Now)
                    Response.Redirect("Default.aspx");
                login = (string)Session["SCSLogin"];
                expDate = ((DateTime)Session["SCSDate"]).ToString();
                Response.Write("<div align=center> В системе как: " + login + "<BR> В системе до: " + expDate + "<BR></div>");
                Session["SCSDate"] = DateTime.Now.AddMinutes(10);
                Title = (string)Session["SCSTitle"] + " : " + login;
                needTitle = false;
            }
            if ((string)Session["Back"] == "true")
            {
                Session["Back"] = null;
            }
            else if (Session["ComeFrom"] != null)
            {
                Session["ComeFrom"] = null;
            }
            /*string constr = WebConfigurationManager.ConnectionStrings["SCSDataBase"].ConnectionString;
            SqlConnection con = new SqlConnection(constr);
            try
            {
                con.Open();
                pId = Convert.ToInt32((string)Session["SCSParameter1"]);
                SqlCommand cmd = new SqlCommand("", con);
                cmd.CommandText = "exec getallsubjects";
                //cmd.Parameters.Add("@pid", pId);
                dr = cmd.ExecuteReader();
                ddlSubject.DataSource = dr;
                ddlSubject.DataTextField = "subject";
                ddlSubject.DataValueField = "subject";
                ddlSubject.DataBind();
            }
            catch (Exception err)
            {
                Response.Write(err.Message);
            }
            finally
            {
                con.Close();
                dr.Close();
            }*/
            string connectionstring = WebConfigurationManager.ConnectionStrings["SCSDataBase"].ConnectionString;
            SqlConnection con = new SqlConnection(connectionstring);
            try
            {
                con.Open();
                SqlCommand cmd = new SqlCommand("", con);
                cmd.CommandText = "exec getUserAccess @lg";
                cmd.Parameters.Add("@lg", login);
                int access = (int)cmd.ExecuteScalar();
                if (access <= 2)
                {
                    gvView.AutoGenerateEditButton = false;
                    gvView.AutoGenerateDeleteButton = false;
                    btnAddValues.Enabled = false;
                    btnAddValues.Visible = false;
                }
                if (access <= 1)
                {
                    gvView.AutoGenerateEditButton = false;
                    gvView.AutoGenerateDeleteButton = false;
                    btnAddValues.Enabled = false;
                    btnAddValues.Visible = false;
                    btnChange.Enabled = false;
                    btnChange.Visible = false;
                }
            }
            catch (Exception err)
            {
                Response.Write(err.Message);
            }
            finally
            {
                con.Close();
            }
            btnShow_Click(sender, e);
            ////gvView.AutoGenerateEditButton = false;
        }
        else
        {
            Response.Redirect("Default.aspx");
        }
    }
    protected void btnShow_Click(object sender, EventArgs e)
    {
        cdViewer.SelectedDates.Clear();
        string constr = WebConfigurationManager.ConnectionStrings["SCSDataBase"].ConnectionString;
        SqlConnection con = new SqlConnection(constr);
        SqlDataReader dtrd = null;
        try
        {
            con.Open();
            pId = Convert.ToInt32((string)Session["SCSParameter1"]);
            SqlCommand cmd = new SqlCommand("", con);
            cmd.CommandText = "exec getPupilOut @pid";
            cmd.Parameters.Add("@pid", pId);
            dtrd = cmd.ExecuteReader();
            reasons.Clear();
            hours.Clear();
            while (dtrd.Read())
            {
                DateTime dt = (DateTime)dtrd.GetValue(0);
                int reas = (int)dtrd.GetValue(1);
                reasons.Add(reas);
                hours.Add(dt.Hour);
                //reas = dt.Millisecond % 10;
                cdViewer.SelectedDates.Add(dt);
            }
        }
        catch (Exception err)
        {
            Response.Write(err.Message);
        }
        finally
        {
            con.Close();
            try
            {
                dtrd.Close();
            }
            catch
            { 
                
            }
        }
        ////gvView.AutoGenerateEditButton = false;
        btnAddValues.Visible = false;
        gvView.Visible = false;
    }

    public void refreshtable()
    {
        string connectionstring = WebConfigurationManager.ConnectionStrings["SCSDataBase"].ConnectionString;
        SqlConnection con = new SqlConnection(connectionstring);
        try
        {
            con.Open();
            pId = Convert.ToInt32(Session["SCSParameter1"]);
            SqlCommand cmd = new SqlCommand("", con);
            cmd.CommandText = "exec ShowPupilReportForDate @pid, @dt, @dt2, 1, 'false'";
            cmd.Parameters.Add("@pid", pId);
            cmd.Parameters.Add("@dt", ((DateTime)Session["SCSRedactorCurrentDate"]).AddHours(1));
            cmd.Parameters.Add("@dt2", ((DateTime)Session["SCSRedactorCurrentDate"]).AddHours(2));
            cmd.ExecuteNonQuery();
            cmd.CommandText = "exec ShowPupilReportForDate @pid, @dt2, @dt, 2, 'false'";
            cmd.ExecuteNonQuery();
            cmd.CommandText = "exec ShowPupilReportForDate @pid, @dt, @dt2, 0, 'true'";
            dr = cmd.ExecuteReader();
            gvView.DataSource = dr;
            gvView.DataBind();
        }
        catch (Exception err)
        {
            Response.Write(err.Message);
        }
        finally
        {
            con.Close();
            try
            {
                dr.Close();
            }
            catch
            {

            }
        }
        //gvView.AutoGenerateEditButton = true;
        btnAddValues.Visible = true;
        gvView.Visible = true;
    }

    protected void btnChange_Click(object sender, EventArgs e)
    {
        try
        {
            DateTime dt = (DateTime)Session["SCSRedactorCurrentDate"];
            int hh = Convert.ToInt32(tbHours.Text);
            int reas = 0;
            if ((tbReason.Text == "у") | (tbReason.Text == "У"))
            {
                reas = 1;
            }
            else if ((tbReason.Text == "б") | (tbReason.Text == "Б"))
            {
                reas = 2;
            }
            else if ((tbReason.Text == "п") | (tbReason.Text == "П"))
            {
                reas = 3;
            }
            string constr = WebConfigurationManager.ConnectionStrings["SCSDataBase"].ConnectionString;
            SqlConnection con = new SqlConnection(constr);
            try
            {
                con.Open();
                pId = Convert.ToInt32((string)Session["SCSParameter1"]);
                SqlCommand cmd = new SqlCommand("", con);
                cmd.CommandText = "exec isPupilOutExists @pid, @dt";
                cmd.Parameters.Add("@pid", pId);
                cmd.Parameters.Add("@dt", dt);
                int cnt = (int)cmd.ExecuteScalar();
                DateTime ndt = dt.AddHours(-dt.Hour);
                ndt = ndt.AddHours(hh);
                if (cnt != 0)
                {
                    cmd.CommandText = "exec setPupilOut @pid, @dt, @rs, @ndt";
                }
                else 
                {
                    cmd.CommandText = "exec NewPupilOut @pid, @rs, @ndt";
                }
                cmd.Parameters.Add("@rs", reas);
                cmd.Parameters.Add("@ndt", ndt);
                cmd.ExecuteScalar();
                btnShow_Click(sender, e);
            }
            catch (Exception err)
            {
                Response.Write(err.Message);
            }
            finally
            {
                con.Close();
            }
        }
        catch (Exception err)
        {
            Response.Write(err.Message);
        }
        btnShow_Click(sender, e);
    }

    public int findDate(DateTime dt)
    {
        int res = -1;
        for (int i = 0; i < cdViewer.SelectedDates.Count; i++)
        {
            if  (   (cdViewer.SelectedDates[i].Year     ==  dt.Year)
                &   (cdViewer.SelectedDates[i].Month    ==  dt.Month)
                &   (cdViewer.SelectedDates[i].Day      ==  dt.Day) )
            {
                res = i;
                i = cdViewer.SelectedDates.Count + 1;
            }
        }
        return res;
    }

    protected void cdViewer_SelectionChanged(object sender, EventArgs e)
    {
        DateTime dt = cdViewer.SelectedDate;
        Session["SCSRedactorCurrentDate"] = dt;
        btnShow_Click(sender, e);
        refreshtable();
        int ind = findDate(dt);
        int reas;
        if (ind != -1)
        {
            tbHours.Text = hours[ind].ToString();
            reas = (int)reasons[ind];
        }
        else
        {
            tbHours.Text = "0";
            reas = 0;
        }
        if (reas == 1)
        {
            tbReason.Text = "У";
        }
        else if (reas == 2)
        {
            tbReason.Text = "Б";
        }
        else if (reas == 3)
        {
            tbReason.Text = "П";
        }
        else
        {
            tbReason.Text = "-";
        }
        btnChange.Enabled = true;
        cdViewer.SelectedDates.Clear();
        cdViewer.SelectedDate = dt;
    }
    protected void onEditAccept(object sender, EventArgs e)
    { 
        
    }
    protected void gvView_RowEditing(object sender, GridViewEditEventArgs e)
    {
        editingRow = e.NewEditIndex;
        Session["SCSRedactorRowIndexValue"] = editingRow.ToString();
        ddlSubject.Visible = true;
        ddlValue.Visible = true;
        btnRowEditAccept.Visible = true;
        btnRowEditCancel.Visible = true;
        ddlHour.Visible = true;
        gvView.Visible = false;
        cdViewer.Visible = false;
        tbHours.Visible = false;
        tbReason.Visible = false;
        btnChange.Visible = false;
        btnShow.Visible = false;
        btnAddValues.Visible = false;
        string hour = gvView.Rows[editingRow].Cells[3].Text;
        string subject = gvView.Rows[editingRow].Cells[2].Text;
        string vals = gvView.Rows[editingRow].Cells[4].Text;
        ddlSubject.Text = subject;
        if (vals == "&nbsp;")
        {
            vals = "";
        }
        ddlValue.Text = vals;
        ddlHour.Text = hour;
    }
    protected void gvView_SelectedIndexChanged(object sender, EventArgs e)
    {
        
    }
    protected void btnRowEditCancel_Click(object sender, EventArgs e)
    {
        ddlSubject.Visible = false;
        ddlValue.Visible = false;
        btnRowEditAccept.Visible = false;
        btnRowEditCancel.Visible = false;
        gvView.Visible = true;
        cdViewer.Visible = true;
        tbHours.Visible = true;
        tbReason.Visible = true;
        btnChange.Visible = true;
        btnShow.Visible = true;
        btnAddValues.Visible = true;
        editingRow = -1;
    }
    protected void btnRowEditAccept_Click(object sender, EventArgs e)
    {
        SqlConnection con = null;
        try
        {
            editingRow = Convert.ToInt32(Session["SCSRedactorRowIndexValue"]);
            int rowid = -1;
            if (editingRow != -1)
            {
                rowid = Convert.ToInt32(gvView.Rows[editingRow].Cells[1].Text);
            }
            string subject = ddlSubject.SelectedItem.Text;
            string values = ddlValue.SelectedItem.Text;
            string strcon = WebConfigurationManager.ConnectionStrings["SCSDataBase"].ConnectionString;
            con = new SqlConnection(strcon);
            con.Open();

            SqlCommand cmd2 = new SqlCommand("", con);
            cmd2.CommandText = "exec getform @pid";
            cmd2.Parameters.Add("@pid", pId);
            string form = (string)cmd2.ExecuteScalar();
            SqlCommand cmd4 = new SqlCommand("", con);
            cmd4.CommandText = "exec getPupilIdFromForm @form";
            cmd4.Parameters.Add("@form", form);
            SqlDataReader AllPID = cmd4.ExecuteReader();
            gvHidden.DataSource = AllPID;
            gvHidden.DataBind();
            AllPID.Close();
            for (int i = 0; i < gvHidden.Rows.Count; i++)
            {
                int newid = Convert.ToInt32(gvHidden.Rows[i].Cells[0].Text);
                if (newid != pId)
                {
                    SqlCommand cmd3 = new SqlCommand("", con);
                    cmd3.CommandText = "exec ChangeAllPupilValuesForm @subj, @dt, @pid";
                    cmd3.Parameters.Add("@subj", subject);
                    cmd3.Parameters.Add("@dt", ((DateTime)Session["SCSRedactorCurrentDate"]).AddHours(Convert.ToInt32(ddlHour.SelectedItem.Text)));
                    cmd3.Parameters.Add("@pid", newid);
                    cmd3.ExecuteScalar();
                }
            }

            SqlCommand cmd = new SqlCommand("", con);
            cmd.CommandText = "exec ChangePupilValues @id, @subj, @vals, @dt, @pid";
            cmd.Parameters.Add("@pid", pId);
            cmd.Parameters.Add("@id", rowid);
            cmd.Parameters.Add("@subj", subject);
            cmd.Parameters.Add("@vals", values);
            cmd.Parameters.Add("@dt", ((DateTime)Session["SCSRedactorCurrentDate"]).AddHours(Convert.ToInt32(ddlHour.SelectedItem.Text)));
            cmd.ExecuteNonQuery();
            ddlSubject.Visible = false;
            ddlValue.Visible = false;
            btnRowEditAccept.Visible = false;
            btnRowEditCancel.Visible = false;
            ddlHour.Visible = false;
            gvView.Visible = true;
            cdViewer.Visible = true;
            tbHours.Visible = true;
            tbReason.Visible = true;
            btnChange.Visible = true;
            btnShow.Visible = true;
            btnAddValues.Visible = true;
        }
        catch (Exception err)
        {
            Response.Write(err.Message);
            ddlSubject.Visible = false;
            ddlValue.Visible = false;
            ddlHour.Visible = false;
            btnRowEditAccept.Visible = false;
            btnRowEditCancel.Visible = false;
            gvView.Visible = true;
            cdViewer.Visible = true;
            tbHours.Visible = true;
            tbReason.Visible = true;
            btnChange.Visible = true;
            btnShow.Visible = true;
        }
        finally
        {
            try
            {
                con.Close();
            }
            catch
            { 
            
            }
        }
        editingRow = -1;
        refreshtable();
    }
    protected void btnAddValues_Click(object sender, EventArgs e)
    {
        editingRow = -1;
        Session["SCSRedactorRowIndexValue"] = -1;
        ddlSubject.Visible = true;
        ddlValue.Visible = true;
        btnRowEditAccept.Visible = true;
        btnRowEditCancel.Visible = true;
        ddlHour.Visible = true;
        gvView.Visible = false;
        cdViewer.Visible = false;
        tbHours.Visible = false;
        tbReason.Visible = false;
        btnChange.Visible = false;
        btnShow.Visible = false;
    }
    protected void btnBackToCabinet_Click(object sender, EventArgs e)
    {
        Response.Redirect("Cabinet.aspx");
    }
    protected void gvView_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        SqlConnection con = null;
        try
        {
            editingRow = e.RowIndex;
            int rowid = -1;
            if (editingRow != -1)
            {
                rowid = Convert.ToInt32(gvView.Rows[editingRow].Cells[1].Text);
            }
            string strcon = WebConfigurationManager.ConnectionStrings["SCSDataBase"].ConnectionString;
            con = new SqlConnection(strcon);
            con.Open();
            string subject = gvView.Rows[editingRow].Cells[2].Text;
            string hour = gvView.Rows[editingRow].Cells[3].Text;

            SqlCommand cmd2 = new SqlCommand("", con);
            cmd2.CommandText = "exec getform @pid";
            cmd2.Parameters.Add("@pid", pId);
            string form = (string)cmd2.ExecuteScalar();
            SqlCommand cmd4 = new SqlCommand("", con);
            cmd4.CommandText = "exec getPupilIdFromForm @form";
            cmd4.Parameters.Add("@form", form);
            SqlDataReader AllPID = cmd4.ExecuteReader();
            gvHidden.DataSource = AllPID;
            gvHidden.DataBind();
            AllPID.Close();
            for (int i = 0; i < gvHidden.Rows.Count; i++)
            {
                int newid = Convert.ToInt32(gvHidden.Rows[i].Cells[0].Text);
                if (newid != pId)
                {
                    SqlCommand cmd3 = new SqlCommand("", con);
                    cmd3.CommandText = "exec DeleteAllPupilValuesForm @subj, @dt, @pid";
                    cmd3.Parameters.Add("@subj", subject);
                    cmd3.Parameters.Add("@dt", ((DateTime)Session["SCSRedactorCurrentDate"]).AddHours(Convert.ToInt32(hour)));
                    cmd3.Parameters.Add("@pid", newid);
                    cmd3.ExecuteScalar();
                }
            }

            SqlCommand cmd = new SqlCommand("", con);
            cmd.CommandText = "exec DeletePupilValue @id";
            cmd.Parameters.Add("@id", rowid);
            cmd.ExecuteNonQuery();
        }
        catch (Exception err)
        {
            Response.Write(err.Message);
        }
        finally
        {
            try
            {
                con.Close();
            }
            catch
            {

            }
        }
        editingRow = -1;
        refreshtable();
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        Session["ComeFrom"] = "Redactor.aspx";
        Response.Redirect("ChangeCabinet.aspx");
    }
}
